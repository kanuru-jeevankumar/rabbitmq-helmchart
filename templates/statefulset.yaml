apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
  namespace: rabbit
  labels:
    app: rabbitmq
spec:
  serviceName: "rabbitmq"
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      initContainers:
        - name: rabbitmq-peer-discovery
          image: busybox
          command:
            - sh
            - -c
            - echo waiting for cluster setup...; sleep 10
      containers:
        - name: rabbitmq
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - containerPort: 5672
            - containerPort: 15672
          env:
            - name: RABBITMQ_ERLANG_COOKIE
              value: "{{ .Values.auth.erlangCookie }}"
            - name: RABBITMQ_DEFAULT_USER
              value: "{{ .Values.auth.username }}"
            - name: RABBITMQ_DEFAULT_PASS
              value: "{{ .Values.auth.password }}"
            - name: RABBITMQ_NODENAME
              value: rabbit@$(HOSTNAME).rabbitmq.rabbit.svc.cluster.local
            - name: RABBITMQ_USE_LONGNAME
              value: "true"
          volumeMounts:
            - name: data
              mountPath: /var/lib/rabbitmq
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.persistence.size | default "8Gi" }}
        storageClassName: {{ .Values.persistence.storageClass | default "standard" }}
