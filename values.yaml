replicaCount: 3

image:
  repository: rabbitmq
  tag: 3.12-management
  pullPolicy: IfNotPresent

resources:
  limits:
    cpu: "500m"
    memory: "512Mi"
  requests:
    cpu: "250m"
    memory: "256Mi"

persistence:
  enabled: true
  size: 5Gi
  storageClass: "standard"

service:
  type: ClusterIP
  port: 5672
  managementPort: 15672

auth:
  username: "admin"
  password: "password@123"
  erlangCookie: "my-erlang-cookie"

probes:
  liveness:
    httpGet:
      path: /api/healthchecks/node    # Updated to RabbitMQ health endpoint
      port: 15672                      # Correct management port for RabbitMQ
    initialDelaySeconds: 30            # Increased delay to allow RabbitMQ to initialize
    periodSeconds: 10
    failureThreshold: 3
  readiness:
    httpGet:
      path: /api/healthchecks/node    # Updated to RabbitMQ health endpoint
      port: 15672                      # Correct management port for RabbitMQ
    initialDelaySeconds: 30            # Increased delay to allow RabbitMQ to initialize
    periodSeconds: 10
    failureThreshold: 3

serviceAccount:
  create: true
  name: "rabbitmq-service-account"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: rabbitmq.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
